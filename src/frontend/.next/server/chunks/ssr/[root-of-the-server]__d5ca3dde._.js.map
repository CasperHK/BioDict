{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/frontend/layouts/DashboardLayout.module.css [ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"dashboardContent\": \"DashboardLayout-module__YVuIta__dashboardContent\",\n  \"dashboardRoot\": \"DashboardLayout-module__YVuIta__dashboardRoot\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///F:/Workspace/projects/BioDict/src/frontend/layouts/DashboardLayout.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\r\nimport TopNavBar from '../components/TopNavBar';\r\nimport Footer from '../components/Footer';\r\nimport styles from './DashboardLayout.module.css';\r\n\r\ninterface DashboardLayoutProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst DashboardLayout: React.FC<DashboardLayoutProps> = ({ children }) => (\r\n  <div className={styles.dashboardRoot}>\r\n    <TopNavBar />\r\n    <div className={styles.dashboardContent}>{children}</div>\r\n    <Footer />\r\n  </div>\r\n);\r\n\r\nexport default DashboardLayout;\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;;;;;AAMA,MAAM,kBAAkD,CAAC,EAAE,QAAQ,EAAE,iBACnE,qKAAC;QAAI,WAAW,6JAAM,CAAC,aAAa;;0BAClC,qKAAC,+IAAS;;;;;0BACV,qKAAC;gBAAI,WAAW,6JAAM,CAAC,gBAAgB;0BAAG;;;;;;0BAC1C,qKAAC,4IAAM;;;;;;;;;;;uCAII","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/frontend/layouts/OrganismsLayout.module.css [ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"infoBox\": \"OrganismsLayout-module__62Ii5W__infoBox\",\n  \"mainContent\": \"OrganismsLayout-module__62Ii5W__mainContent\",\n  \"pageLayout\": \"OrganismsLayout-module__62Ii5W__pageLayout\",\n  \"sideMenuLeft\": \"OrganismsLayout-module__62Ii5W__sideMenuLeft\",\n  \"sideMenuRight\": \"OrganismsLayout-module__62Ii5W__sideMenuRight\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///F:/Workspace/projects/BioDict/src/frontend/layouts/OrganismsLayout.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\r\nimport styles from './OrganismsLayout.module.css';\r\n\r\ninterface OrganismsLayoutProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst OrganismsLayout: React.FC<OrganismsLayoutProps> = ({ children }) => (\r\n  <div className={styles.pageLayout}>\r\n    <aside className={styles.sideMenuLeft}>\r\n      <nav>\r\n        <ul>\r\n          <li><a href=\"#mammals\">Mammals</a></li>\r\n          <li><a href=\"#birds\">Birds</a></li>\r\n          <li><a href=\"#plants\">Plants</a></li>\r\n          <li><a href=\"#bacteria\">Bacteria</a></li>\r\n        </ul>\r\n      </nav>\r\n    </aside>\r\n    <main className={styles.mainContent}>{children}</main>\r\n    <aside className={styles.sideMenuRight}>\r\n      <div className={styles.infoBox}>\r\n        <h4>Did you know?</h4>\r\n        <p>There are millions of known species on Earth, and new ones are discovered every year!</p>\r\n      </div>\r\n    </aside>\r\n  </div>\r\n);\r\n\r\nexport default OrganismsLayout;\r\n"],"names":[],"mappings":";;;;;AACA;;;AAMA,MAAM,kBAAkD,CAAC,EAAE,QAAQ,EAAE,iBACnE,qKAAC;QAAI,WAAW,6JAAM,CAAC,UAAU;;0BAC/B,qKAAC;gBAAM,WAAW,6JAAM,CAAC,YAAY;0BACnC,cAAA,qKAAC;8BACC,cAAA,qKAAC;;0CACC,qKAAC;0CAAG,cAAA,qKAAC;oCAAE,MAAK;8CAAW;;;;;;;;;;;0CACvB,qKAAC;0CAAG,cAAA,qKAAC;oCAAE,MAAK;8CAAS;;;;;;;;;;;0CACrB,qKAAC;0CAAG,cAAA,qKAAC;oCAAE,MAAK;8CAAU;;;;;;;;;;;0CACtB,qKAAC;0CAAG,cAAA,qKAAC;oCAAE,MAAK;8CAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAI9B,qKAAC;gBAAK,WAAW,6JAAM,CAAC,WAAW;0BAAG;;;;;;0BACtC,qKAAC;gBAAM,WAAW,6JAAM,CAAC,aAAa;0BACpC,cAAA,qKAAC;oBAAI,WAAW,6JAAM,CAAC,OAAO;;sCAC5B,qKAAC;sCAAG;;;;;;sCACJ,qKAAC;sCAAE;;;;;;;;;;;;;;;;;;;;;;;uCAMI","debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/frontend/pages/organism/organism.module.css [ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"detailContainer\": \"organism-module__Scuyhq__detailContainer\",\n  \"notFound\": \"organism-module__Scuyhq__notFound\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file:///F:/Workspace/projects/BioDict/src/frontend/pages/organism/%5Bid%5D.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport DashboardLayout from '../../layouts/DashboardLayout';\r\nimport OrganismsLayout from '../../layouts/OrganismsLayout';\r\nimport { Card, CardBody, CardHeader } from '@heroui/react';\r\nimport styles from './organism.module.css';\r\n\r\n// Example data structure for organisms (should be replaced with real data or fetched from backend)\r\nconst organismsData = [\r\n  { code: 'homo-sapiens', name: 'Homo sapiens', classification: 'Mammal', description: 'Modern human.',\r\n    scientificName: 'Homo sapiens',\r\n    kingdom: 'Animalia',\r\n    phylum: 'Chordata',\r\n    class: 'Mammalia',\r\n    order: 'Primates',\r\n    family: 'Hominidae',\r\n    genus: 'Homo',\r\n    habitat: 'Various',\r\n    distribution: 'Worldwide',\r\n    modelUrl: '/models/homo-sapiens.glb',\r\n  },\r\n  { code: 'pan-troglodytes', name: 'Pan troglodytes', classification: 'Mammal', description: 'Chimpanzee.',\r\n    scientificName: 'Pan troglodytes',\r\n    kingdom: 'Animalia',\r\n    phylum: 'Chordata',\r\n    class: 'Mammalia',\r\n    order: 'Primates',\r\n    family: 'Hominidae',\r\n    genus: 'Pan',\r\n    habitat: 'Tropical forests',\r\n    distribution: 'Central Africa',\r\n    modelUrl: '/models/pan-troglodytes.glb',\r\n  },\r\n  { code: 'gallus-gallus', name: 'Gallus gallus', classification: 'Bird', description: 'Chicken.',\r\n    scientificName: 'Gallus gallus',\r\n    kingdom: 'Animalia',\r\n    phylum: 'Chordata',\r\n    class: 'Aves',\r\n    order: 'Galliformes',\r\n    family: 'Phasianidae',\r\n    genus: 'Gallus',\r\n    habitat: 'Domesticated',\r\n    distribution: 'Worldwide',\r\n    modelUrl: '/models/gallus-gallus.glb',\r\n  },\r\n  { code: 'arabidopsis-thaliana', name: 'Arabidopsis thaliana', classification: 'Plant', description: 'Thale cress.',\r\n    scientificName: 'Arabidopsis thaliana',\r\n    kingdom: 'Plantae',\r\n    phylum: 'Tracheophyta',\r\n    class: 'Magnoliopsida',\r\n    order: 'Brassicales',\r\n    family: 'Brassicaceae',\r\n    genus: 'Arabidopsis',\r\n    habitat: 'Fields, roadsides',\r\n    distribution: 'Eurasia, Africa',\r\n    modelUrl: '/models/arabidopsis-thaliana.glb',\r\n  },\r\n  { code: 'escherichia-coli', name: 'Escherichia coli', classification: 'Bacteria', description: 'Common gut bacterium.',\r\n    scientificName: 'Escherichia coli',\r\n    kingdom: 'Bacteria',\r\n    phylum: 'Proteobacteria',\r\n    class: 'Gammaproteobacteria',\r\n    order: 'Enterobacterales',\r\n    family: 'Enterobacteriaceae',\r\n    genus: 'Escherichia',\r\n    habitat: 'Intestines of warm-blooded organisms',\r\n    distribution: 'Worldwide',\r\n    modelUrl: '/models/escherichia-coli.glb',\r\n  },\r\n  // ...more organisms\r\n];\r\n\r\nexport default function OrganismDetailPage() {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  // Find by code or index\r\n  const organism = organismsData.find(\r\n    (org, idx) => org.code === id || String(idx) === id\r\n  );\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <OrganismsLayout>\r\n        {!organism ? (\r\n          <div className={styles.notFound}>\r\n            <h2>Organism Not Found</h2>\r\n            <p>The organism you are looking for does not exist.</p>\r\n          </div>\r\n        ) : (\r\n          <div className={styles.detailContainer}>\r\n            <Card>\r\n              <CardHeader>\r\n                <h2 style={{ margin: 0 }}>{organism.name}</h2>\r\n              </CardHeader>\r\n              <CardBody>\r\n                  <div style={{ padding: '1rem 0' }}>\r\n                    <dl style={{ marginBottom: '2rem' }}>\r\n                      <div><dt><b>Scientific Name</b></dt><dd>{organism.scientificName}</dd></div>\r\n                      <div><dt><b>Classification</b></dt><dd>{organism.classification}</dd></div>\r\n                      <div><dt><b>Kingdom</b></dt><dd>{organism.kingdom}</dd></div>\r\n                      <div><dt><b>Phylum</b></dt><dd>{organism.phylum}</dd></div>\r\n                      <div><dt><b>Class</b></dt><dd>{organism.class}</dd></div>\r\n                      <div><dt><b>Order</b></dt><dd>{organism.order}</dd></div>\r\n                      <div><dt><b>Family</b></dt><dd>{organism.family}</dd></div>\r\n                      <div><dt><b>Genus</b></dt><dd>{organism.genus}</dd></div>\r\n                      <div><dt><b>Habitat</b></dt><dd>{organism.habitat}</dd></div>\r\n                      <div><dt><b>Distribution</b></dt><dd>{organism.distribution}</dd></div>\r\n                      <div><dt><b>Description</b></dt><dd>{organism.description}</dd></div>\r\n                    </dl>\r\n                    <div className={styles.modelSection}>\r\n                      <h2>3D Model</h2>\r\n                      <model-viewer src={organism.modelUrl} alt={organism.name + ' 3D model'} auto-rotate camera-controls style={{ width: '100%', height: '400px', background: '#f5f5f5' }} />\r\n                      <p style={{ fontSize: '0.95rem', color: '#888' }}>Interactive 3D model (GLB/GLTF format)</p>\r\n                    </div>\r\n                  </div>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </OrganismsLayout>\r\n    </DashboardLayout>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}